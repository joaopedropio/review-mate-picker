// Code generated by MockGen. DO NOT EDIT.
// Source: picker.go

// Package mock_domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPicker is a mock of Picker interface.
type MockPicker struct {
	ctrl     *gomock.Controller
	recorder *MockPickerMockRecorder
}

// MockPickerMockRecorder is the mock recorder for MockPicker.
type MockPickerMockRecorder struct {
	mock *MockPicker
}

// NewMockPicker creates a new mock instance.
func NewMockPicker(ctrl *gomock.Controller) *MockPicker {
	mock := &MockPicker{ctrl: ctrl}
	mock.recorder = &MockPickerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPicker) EXPECT() *MockPickerMockRecorder {
	return m.recorder
}

// Pick mocks base method.
func (m *MockPicker) Pick(persons Persons) (Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pick", persons)
	ret0, _ := ret[0].(Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Pick indicates an expected call of Pick.
func (mr *MockPickerMockRecorder) Pick(persons interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pick", reflect.TypeOf((*MockPicker)(nil).Pick), persons)
}
