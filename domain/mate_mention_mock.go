// Code generated by MockGen. DO NOT EDIT.
// Source: mate_mention.go

// Package mock_domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMateMentionBuilder is a mock of MateMentionBuilder interface.
type MockMateMentionBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockMateMentionBuilderMockRecorder
}

// MockMateMentionBuilderMockRecorder is the mock recorder for MockMateMentionBuilder.
type MockMateMentionBuilderMockRecorder struct {
	mock *MockMateMentionBuilder
}

// NewMockMateMentionBuilder creates a new mock instance.
func NewMockMateMentionBuilder(ctrl *gomock.Controller) *MockMateMentionBuilder {
	mock := &MockMateMentionBuilder{ctrl: ctrl}
	mock.recorder = &MockMateMentionBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMateMentionBuilder) EXPECT() *MockMateMentionBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockMateMentionBuilder) Build(name string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", name)
	ret0, _ := ret[0].(string)
	return ret0
}

// Build indicates an expected call of Build.
func (mr *MockMateMentionBuilderMockRecorder) Build(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockMateMentionBuilder)(nil).Build), name)
}
